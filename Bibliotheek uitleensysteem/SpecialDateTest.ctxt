#BlueJ class context
comment0.params=
comment0.target=SpecialDateTest()
comment0.text=\n\ Default\ constructor\ for\ test\ class\ SpecialDateTest\n
comment1.params=
comment1.target=void\ setUp()
comment1.text=\n\ Sets\ up\ the\ test\ fixture.\n\n\ Called\ before\ every\ test\ case\ method.\n
comment10.params=
comment10.target=void\ testInvalidArgumentDaysDifference()
comment10.text=\n\ Test\ the\ method\ daysDifference\ with\ an\ invalid\ argument.\n
comment11.params=
comment11.target=void\ testDaysDifferenceTwoArguments()
comment11.text=\n\ Test\ the\ method\ daysDifference\ with\ two\ arguments.\n
comment12.params=
comment12.target=void\ testInvalidArgumentDaysDifferenceTwoArguments()
comment12.text=\n\ Test\ the\ method\ daysDifference\ with\ two\ invalid\ arguments.\n
comment13.params=
comment13.target=void\ testCheckDate()
comment13.text=\n\ Test\ the\ method\ checkDate.\n\ It\ can\ fail\ on\ someday\ because\ it\ uses\ a\ date\ in\ the\ future.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
comment14.params=
comment14.target=void\ testCheckDateNowAndFuture()
comment14.text=\n\ Test\ the\ method\ checkDateNowAndFuture.\n\ It\ can\ fail\ on\ someday\ because\ it\ uses\ a\ date\ in\ the\ future.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
comment15.params=
comment15.target=void\ testCheckFormatDate()
comment15.text=\n\ Test\ the\ method\ checkFormatDate.\n\ It\ can\ fail\ on\ someday\ because\ it\ uses\ a\ date\ in\ the\ future.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
comment16.params=
comment16.target=void\ testAddDays()
comment16.text=\n\ Test\ the\ method\ addDays.\n
comment2.params=
comment2.target=void\ tearDown()
comment2.text=\n\ Tears\ down\ the\ test\ fixture.\n\n\ Called\ after\ every\ test\ case\ method.\n
comment3.params=
comment3.target=void\ testYearsDifference()
comment3.text=\n\ Test\ the\ method\ yearsDifference.\n\ It\ can\ fail\ on\ someday\ because\ it\ calculates\n\ the\ difference\ (years)\ between\ the\ start\ date\ and\ today.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
comment4.params=
comment4.target=void\ testRoundedYearsDifference()
comment4.text=\n\ Test\ the\ method\ roundedYearsDifference.\n\ It\ can\ fail\ on\ someday\ because\ it\ calculates\n\ the\ difference\ (years)\ between\ the\ start\ date\ and\ today.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
comment5.params=
comment5.target=void\ testInvalidArgumentYearsDifference()
comment5.text=\n\ Test\ the\ method\ yearsDifference\ with\ an\ invalid\ argument.\n
comment6.params=
comment6.target=void\ testDateToMilliseconds()
comment6.text=\n\ Test\ the\ method\ dateToMilliseconds.\n
comment7.params=
comment7.target=void\ testInvalidDateToMilliseconds()
comment7.text=\n\ Test\ the\ method\ dateToMilliseconds\ with\ an\ invalid\ argument.\n
comment8.params=
comment8.target=void\ testGetDateToday()
comment8.text=\n\ Test\ the\ method\ getDateToday.\n\ It\ can\ fail\ on\ someday\ because\ it\ returns\ the\ date\ of\ today.\n
comment9.params=
comment9.target=void\ testDaysDifference()
comment9.text=\n\ Test\ the\ method\ daysDifference.\n\ It\ can\ fail\ on\ someday\ because\ it\ calculates\n\ the\ difference\ (days)\ between\ the\ start\ date\ and\ today.\n\ Then\ the\ expected\ result\ may\ be\ adjusted.\n
numComments=17
